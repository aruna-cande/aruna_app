# Automatically generated on 2020-04-22 UTC from https://staging.codemagic.io/app/5e9871cc872548000152bc9f/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  default-workflow:
    name: Default Workflow
    environment:
      vars:
        CM_CERTIFICATE: Encrypted(Z0FBQUFBQmVvR0M1TUdsNWJXdXdZZWFrWjNna3BLbER4ZXlKVl9mMy1UTEo1MVdZMjU1RWhiTW1jNkdKRy05ekRUb1p0eXlJdFdwcThYZ00zUWZYRW9ZSXRlZ0NGeUJXcU5JUDRCYldmaXJUNFJDS1IyRE9rUk9JSkN6YUg2Nk45UTFKS2lCajE1N0FONUVoc1F1SFF2SnQ1VzJ2UW0wb29lNlNncV81cHJCWkp2SFJpbnhZcUVyUXkxaXlDRTNYUzF2QTdTMTZsUGVDam9UYVlvM0xBUktmS2dhM1M2TGpnNmxCWlFJUUU1Z2x2ODJKZFZwNkZqaVF3VkhHMXczZWU4YjEzazZpWGxnTkpBMWczUnZzd3lHS041RWhtNlJDOENHZmVWOUwxb3g2RlVJTWlZamEtZXhQcW5Ea3dsT2s1RnpWX1Rwcm5HX3YzN1dJUGhhc3dIb1djRjF6VzdFcEpUc0ljY1lLTUMtMjQ3cGdESllZbk1iNkpPMEtuR2M4Z1hPWlc1X1Q0SlFYZHlZWm1jUm1iMHR6M1l4bzBsRFZqa2w5YkxDaWFTaFZodzJHeC1TRW43M0FuZ2RMeTVFM1YtWkliWlBCNjdMZU9oTWpJS0I2M1FYMGxvdENFY2V5ZjVUaXdtWFo4M3ZDcUVIeFlPVktlSFg4enE3YlNkelFDVkxuODBYdWJHRVZzNmx3R3dwUkZnZjhoZU1SZmZET0J0blFHTlFvN0g3TW5aM2JWeXV3LTlpSVNmbXNLWFN6c3NkT2NtZFR6cDZYVXZqTjNxTDBFcDQycG9nMG1tRTdYVEM5SmZQYkVPWkFrVkJxM2JxYWhmZkdxUUx6d3NmNTNHWmhNYVJ4ZWVtUEt6cWtxdHRqTEpzNmNiclVDUGFGMnFoS290YWo0Mnk3QkRSRTZkc1plQ3phWDZjUXNTTEoyaTFxV3VWVzNramkwUGdTNWQtTmVWelB3NEFJbTA5OEk2S3laeTNaM0RQNHJ1LVQ4aG13UEZQejE1SG1kUjMycUdIaFQ0bDNVNV91RTZ3aE51RnpKeGNSYThuREVjeGg5c3NqV00wOTE3NUY2M2Z1TW5rM2ZmWnpGdXVCcnZveXJDRlNWMEJrYjdqNVVZV3ItLTljNVNvTWxTcS1BTW5XamItS2VfZW5BN1NNSHpmWmNQdzd6Y3FzUlNrN1p1MXdVZkhuU1AzVnVKVmZaLVB3RjFpVnZodnBNV0VXZXhaZ3BRTE5RbzhUTGtqRHo2MzJWNGI5ajBhZzl3QVdONXVpZXNWNmg5bkFGbTVHNjFlSmNIbWFuNERtUE1ma290ZkhWVHkwT2ZockgwRE5pNlg1MjhEcVhBY3JHX3hhMjlSNUhHWEt6NjVCOEZfX1lpQ2xGQzBORExYSXRLQVNqWXRuZ0xzUnV2ZVV5blB1UE5LMEZtanRHUGpXOVZpYWlkZDNUZE1VNmoxbTZaLTd3UUV5OTlMazR6d0dVc1VvQnV2M000WkhBYXpuOVZuRTQ3WHBCUVR3NXFjV1ZHUUhGVUE0TlJmYkhLU1pDV1IwNTBwTUJKalVadWNpdHk0WS16aGRFQXNRcy12V1FGQllOY2FHeGxFRFRCY2I5UGdKOHNkMGZTVFBDajZwQU9YdTlLMzh2Y0d6dlNGNGdvR0EyV0ZydldYcExUZFlaZWNGMGFQdVhlNnhoLUZxa3d5eFRUbDJhcXZXLTRhQUpFYWFGckVjUlhQM1ZyUnRraXp3ZnF2MHJUSE0tS2xabkpXeFNwREdrcllRaTM5b3MwSTRPNm14aWJVVVhPSHRZU3VCX2xBVGxNRmVzcWtudnVSMTZMMUsyNzZ1eFk4MW9yLXV0M01RWnBaLWN5SmJtUVJxMy1vSEJ1V0dDUnlxTXZjRVhELTJJY1NQZ2R3RW9zOE53MnN5N1FJR1l4dVVnZTkycHY1QUI3elJUc3F2a0kwMC1yamVuNlZSZlA2ZFpHTUw3OTF3WU9Za2Nfci13QmNhOHROdVY2TklfcWJNcjEyQmFPNjZpajJKVHBfeWtvNEFNbER1ZXprMXJEUzZ4MnNfN29td3FKU0JETjVnRzc3eklJcmNjYmx1aFNrZ29jTFhnVURuSVY4cnBra2Znc1ItSkRVdGR6Sjk3aURRUEVFMkZNZnFSUkNPZEtIOXlDc0VXZjZBcTRfdzd3WTFKOTQxRS1ZT1JXM0k2UGZvX2wyUEJPNU9ZZXh2aXMyYS13V29MOURrUUlkcWJ4dlNXcFJxNklkZlQ1UlhLWHN4MXo3WTFxcHZlMFBvRWVXYlpmcU9UcVRTYjdYanRnekZCbk11YzRqU1M2ZDl5OGpNZlM0NzJXWklkSDJ0MmdlcUZybEs5MGkzeU5BZExudFhTQk5tVk5hX2NFY0xFMXdTalFpLXM5N1FHamt5YXllX1RCb0lTb1F1S05kenlmaHM5TllHOHhkZWlscTlSWTJRWUs5MVZNeW9IdlBVNGQ1d002ZXN3WFNJRkoxMTljNGJ2RDBuQ0dPV0dZckJ0a1BlNXdRWjhwRWk0SmhrRlFfeFc4WVNsaTFkM3B3a1V6eExXbEVBZ09JWmM5LUpYZnBYWXk5MV9TZDdYWGdNZXFHNHUzaUo3YWk3Z1NKUVBWQzA1ajVVX2lzOFhNMUY0bjJOTFdvcXRFYlNUdGw4eFh0dWRoS0ctZVZ3eEJQeXY0eDRfNDBqY3NRWlUzR2J4VDIyR05KSjl4MWlabmg3bmpkRXFFbHdvRmRUOG82enNRNU9IQXpnUmpqbmVWLWplR2MzaFA5YjlqbUhSdENuMU5YNHBxVVpFc0tTS0NJaU8wRllieVpCZWxnajNObkJBVGJ6SXN6aFZ3NEZCalgtTmEwWXhVb3l2LUdCNGxHcU1pdHQ2aC1rN09RcER6dFdEMFhJY3hoTGtVQXRjck5rcjZZcm5lOXp3YVFxOHBWX2t5ckdPTVdhTmhURERZQm1aMDlsd0pqTXE1cDNqTE9wZnZNRk5EMGt6T05DUnNoR0RTVERUVjY5aWc3djA2cmdLOFV6LTZkQVlWZmJrX1dlbjN2eU9lYUtNVFZvMy1EdjdLazlFOGZXSjRfLXpkSC1aRnVYR0NBWWFyazcxNlpzTHpoaENOUWRNNjlQY2lwcDhQdi1Pa29VRHJXVzJnN3FyODhLa3lpR1hmWHlDNjc3ek0waUlSSnpRWl9QUlpJZ0VxZTFGVU9kUGJNZFU5THRGZUF5aGQxRlBreTQzazNPc0EtTmctXzQyWkl5al9ad2poZWxFa1ZiZ2l0cWR6VlhOWkczRm5sQVppYUQ5TC1oZHVzOEJqQW5XVHA4YWZoV25sLUpHcEJRZFFud0o2YThNV0lyNGJULU5tejZ4UkJMVFBTd29lQ2NDdHkxWkplbC1VVzhxcU5WclU4OWJkVDduZWxrSS0tRnpuUTZFSnhfa2dFY185Z1VUd1J4NTE2R3NCVTAyOGt2bzlzaF9mMHhCTm10Nml5bG5nNkRXU0FoT3JvdWs2aTUzLVlHVnVSaFV1b09MdEFkZkpSYXNha3NhYk4wZWhXVndEYlhTMnZQbHVHamNCNVM4ckY0MW1NWDdLWnE3Qnk4WWkwQm1pdHVPMTY2ZjB5YmpxVTlOVkZCSk9WVUxEbzhxWmVFRXdGQ3g0NVA5WGFTcm42RV9JN05sSVVWMXdPRFpFdHpWR0J4dU9VYWpWd1RsR1JZbTVMcWM4RHlVYXpfcTZJeVJUSWtDRmYxdGVCTDdjNVV3T0dlUVBCVTlWNVJNeHNqSGRnTnJ3VHdjZXE5YlY2TWVwNWlqc0NPNC1Jb3MtdzVWMjhTOTV3YmhFblBERzEyNkhEWWhfd1F1dG53aUFBSVk2Ym16Zk00VkdOR2hMellJbTVBaWllYnZGdDVxY1lhUXRMYTE1WFNJSEVieUxGeU9pcDVxTEhsOHlOcTd5Vm94MHhVU1dSWlp1YlpfalV0dFRtaVNONFg3a0xCYlVwNkVydHg5aEo1eDdTZUhQUXF6empYVEEzSV93bzlCdDJhM00td3R0Q0NuYWlHem44N055M0xMeFZEVmhvUWpNSzlpcTR0VnYtM21XWk42TERnb2tqQTVkM3FlbzhBU3dFblJ6LTNfVlJYUGx0ejRNU0N0SE96SF9jMjB6NGlZUkFPOFVTN3BCMzJEdUI4UnpxY2JkRG95dVdqREU3VDBjbmx4QXVubHdja0FDd1BLQnRISE9rcU9XWkZyUkR6UjAxTjdmRzNFclhZRHVRUWJqVjFMSXd6bHlBT2hBSzZtcFdXTDR0aGxObG5WR0dvb2M5SnR0ZVFKc2JuT0hIX0NJMk1GNWpRX29yR3BvckFGMllXYXh4NVBPTXVXLTNaTjRiR2xCcXdhN2NkRlc1VnloeVRjNUYwLVNyZkR2SmxreDZNamFHNDJLUTZiM0E0M3BKM1d1NlBGZWQ2WGdnMkQ3Sm1pVnJ6SkdnUnhMcnhnMm9FWlluTjBPQ3RlYkRhN0o4NjdpY0hXelRMeVVhYVhwck00UEI4ZDFjS0dYY3Jpc2l6Q2pUOWpNNXh0UDd5a0pSM0VxYXhLXzNUQXZZbVJoeEhSLUlINmxKMnRoZnFzWEVub0w2c3UyLTROeHJKeDRrYThMYlFKellWNUQ4bGRxejlnQmQ0a3pJTExyVnEtVURob0EyaFh4VjlqZmNZekxNODdTS3V4VlBIbmthNms4ck1vUHFpRGtOaV9MTTVOTnRzVmRid3VQYVdNQjJIS1F6RUVENmxtWFZLWDlydkNpTU5aalZzeTFzWlNVOHBjalhlWGxvSU1OU2hKelNMSFk0Z0V4WDFZYU83NUdwYVJfdXRHSkNNLVhCTXp1bUpfempwaWtZRHlwbmRSbEhuQ0gtYnVydDJmTHpMdG9QWFNwWXRXMFZQTHFvNEJzTENhbk5fTUptNjg1dHRvZnpvWWdrYjlqbUZfQ2FFMVFvbWVhVVJiQUVONExfcW9KeXNENkhjbGJnWFllR0dyTjJWd3ktb0FnX3FHWWVzcmhXeGZtRk9GYTVaUHIwNmtnb29pM2RtY1NMWVBzN1RjNGtldUNVWFZMWkpyNkZyTEQyaHpmUmJnZWF3X0FhVDNaaVZMWUc3bk5hUklvN2hjcGV1LVBJUVhrbE9DYmE2RWhhbFpUOHhZNXFOaWZnUEJNbktGNUZTVWNsanIteVNNZFNvc0EtdFpOTmN5aUI0c2RvejYzSmdUTTI5Vm9WUnBTTlpad05LZVBxc2JZd2FUNUVQbGhGT2JYYjFPZHRIMjRIUlJocE4tUDlMZ2E4LWVQamZqWmhDOW0tMVBsYnlJUnM1TXFMY1B5cWp3NldwVUJueDJjTGxxdlgzT3kzTlFMazJERnZlcE0zRGR2WFVJWjdRQlFqcGhWV21Cd3ZjOEdRRHBOMUpUQTlBUGszb2hzS3FXTlhMYVZtWl93MTdGdEZnbnNPR0dMYkduZ2U0VnlaRFJScFZEQS1DUUdNQ1RDMUFTTTdhcHkyN2gyYUdOcEdFOXJrRE5xeV9QRW44dmdON1NPTy1Hd0ZIUXdDY191WkJpRFFvQXQ3MnpyM19pZ1ZlWlNmeFJNRTRmQkxYMVpKWkplaUJfb2FEZXdnSHhSaFpQaWxuWHpLQm1YLTh0LXdSUDI4Y2FtVDMxaU15QTdyMVI5RURac0xfMk9WTkdrQkZnWE5taXhTTmVZVE4zaE9xSkxsUFBpWUhzU1lybWQxd2VjUWRCbHBlS3ZXR2JncmZMMWVlbE1tYWo5S3ZFeE91XzBIbkQ0dGp5a2t0Y21MTEV4ckNBRE13Uk1nTXBGVzFaZTZGbWlkQ3JjN21CSkpjTFUtejFhajVncXo4NkFrVzFLYmRNSUw2NWlIU1Jsc3Bab0tLSnhaaDNyNTJNRG1tZlVwTTd1RkJ0Z0U0ZGlOZFRSclhBRlV5OG5jU280VTdLZmhfRzJna09pbmxaN21Gc2hRWXdjZkc5MVdaZUM4RjBlUmFjUjNXVDVUeTNycVBfSkJOX1lnaVZVT0tTa0FORTY4YjFoTlBXMU1xU0pSbG02dkJiU0NrRW82N003WUV1bXZwX1hDRVlVTl9PcFV5eGVPRlMxakVMZ2hxRlFxQ2FWSE5kTTZZUFRyT2dkTUpVWDJyRWYtUVFnWjl5VGRfbVJNNEwzLUZ0TzB5X1E2V21QZG42Q1FwdHdnbkk4ZHlTRW5SU1lsdU1xd2JBZUItLXZFaFRjeG1hMDlHMWp2NEFWMHBiVDdMOHlrRVV4M0RXNzRRMWFFUnJOM1RDcXE3VVNGY29GWnE0eHJSc29OUHM4QkJWNS1mT3ZRZ195V1NKaVNwNjdndG94b0l0dWptMThvTXhzenpraXVUdTc2eDVuZGxIYnlIeDVaUDVKVVRJdllmaDI1bXE2S09uRHYwM1ZiNDVGRXlJV3JHcElKQzFTMlpnWC1uNU5uc08zaUx6TEk1OHBxc1RrWFBfU1JMRHlZUTZPd2ZVVjVlX05zTUIzLVZ1MnNmWTd3c2NPd3A2ZmVaQng2dEpfekRFMnlUR0FqVjRycTluMmJ0aXJrQTJONFFKZ3ZycUkzQnptWlZJR1dsUC0tZ0M0TkdFRVdXc0lzZzQzWUdjZURIYng0OWY3YWl5QjBFQlItU2dNZlhqVE1Xc0R5LXdUaEhTbVlsZ2FDb1llQ0pYMDBpcUpiSHpiZGk3UFdvT3RqbEJPWW9tTTNjYWZhbDZleDcwU2ZET1pVeEI3X1dZcWctMVdjWk04TGl5VlprZ1VjbGJVZm12eXdvTjJVTmduaWtFRGpOZGljOXVkdktfalc5eVdsUW9iLWhCc2p2eFhhSVZvd1pVQnE0cU5ycFRpUVN4LTNiR29oTmljcGNTOU51cUJzakNleS1QQUhiRTdRakZ3X1dvZW4tN2FoMXctOTVoX1BMM2VHSVdMZVh6LS1DdkI3aGdsWWNXS2k5cEhvRlFWNml3ZnVFNEpJMko4elM1cDJ6b2ZfUnNyNlF3SUF5a0xyX1dzYi1ITXZEZnNvYVpZS0N6MUp0TUprWkhnU1o2bm1lNWpGRUY0dU0zLVhkNXRzbEwyRGxLY2JPQzg2eU9teWNyRzRYME9tVjFueDhOOExQRlB6c3JrTmczaFJtbzBTSkRacFQxVzdTenVBMEkyM1B0QVRDOXloTndGeldsRHc1bUxRWG1qajhoMTZHREJYcTAtMlRtNEZtWERNcE1ENXNMRF8zWlJ0Nk5vUXpBbGd2amhPQUNVRlg5MEd0M05xQ2diMmZQcHp2SDN1cjZlZzVDZl9Ec1RrREFzMWVpeGdCNmRVZ2FKRHRjdVk9)
        CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmVvR0M1Vk1pckdTSVVCbmdSRGc5WWRweGdTeGtsMGVPSHQ0ZGtIazg5ak1hRHMyNVM2V2ZRSldEZjZyNEpUaEhGS2QzZ0pzR3VNUnMxQ2NMWEJhNEpKSE02RXc9PQ==)
        CM_PROVISIONING_PROFILE: Encrypted()
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - flutter packages pub get
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - |
        # set up provisioning profiles
        PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
        mkdir -p "$PROFILES_HOME"
        PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
        echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
        echo "Saved provisioning profile $PROFILE_PATH"
      - |
        # set up signing certificate
        echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
        keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
      - flutter build ios --debug --no-codesign
      - xcode-project use-profiles
      - xcode-project build-ipa --workspace "ios/Runner.xcworkspace" --scheme "Runner"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
